"""
Django settings for api_test project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=&x(++f36znt_4__^m8dcsjdc#po+!emx(j(ffvp_i-@2t=7x^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['modulo-reporteria-asy5131-005d.onrender.com', 'localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', # Indispensable para servir archivos estáticos
    'main_api', # Asegúrate de que tu app 'main_api' esté listada aquí
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api_test.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")], # Esto busca una carpeta 'templates' en la raíz del proyecto
        'APP_DIRS': True, # Esto es crucial para que Django busque templates dentro de las carpetas 'templates' de las apps
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api_test.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/' # La URL base para tus archivos estáticos

# STATICFILES_DIRS es una lista de directorios donde el staticfiles app de Django
# buscará archivos estáticos ADICIONALES, además de los que encuentra dentro
# de las carpetas 'static' de las apps en INSTALLED_APPS.
# Aquí lo configuramos para que apunte directamente a la carpeta 'static' de tu app 'main_api'.
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'main_api', 'static'), # Ruta ABSOLUTA a tu carpeta main_api/static/
]
print("DEBUG: STATICFILES_DIRS[0] resuelto a:", os.path.join(BASE_DIR, 'main_api', 'static'))

# STATIC_ROOT es el directorio donde Django recopilará todos los archivos estáticos
# (de STATICFILES_DIRS y de las apps) cuando ejecutes 'python manage.py collectstatic'.
# Esto se usa principalmente en producción. En desarrollo, no es necesario para servir.
# Si lo tienes definido, asegúrate de que apunta a una carpeta *vacía* o *no existente*
# antes de ejecutar collectstatic en producción.
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_collected') # Ejemplo para producción (descomentar para producción)


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'